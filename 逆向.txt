逆向算法：
%取余逆向使用爆破
数据操作屏幕务必要拖到底，看清被挡住的东西
逆向算法数组移动*4的考虑删除
ResourceHacker看文件中自带文件
逆向字符串得到的数字太大，使用&0xff取低八位

pyinstxtractor.py处理pyinstall打包的exe文件，文件头信息在struct文件里

jar:
XJad

apk:
资源搜索.so，导出

Ollydbg:
搜索字符串：右键→搜索(S)→所有参考文本字串→右键→搜索文本→回车键返回

脱壳：
upx（linux上有个，windows也有个，都要试下）

ida:
HeapCreate：创建堆栈
HeapAlloc：在堆上分配内存
memcpy_s：内存拷贝函数
IsDebuggerPresent()：检测调试器，成功返回1，失败返回0。
ExitProcess：退出进程
MessageBoxA：弹窗口
HeapFree：释放堆内存
HeapDestroy：销毁堆
strcat：将两个char类型连接
发现上下左右四个命令控制的程序，考虑迷宫，看有没有010之类的疑似迷宫控制程序
数字转chr看下
变量赋值可能存在大小端的问题，直接转chr不可行，手动逆
join与strcat后面的字符串可能要先倒过来再拼接
遇到ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=总之先base64处理一下
选中一堆东西按c可以看汇编
*(_DWORD *)为数组偏移计算
sp value错误去函数汇编前报错处alk+k修改负数为0
memset：输入变量
align：几个字节对齐